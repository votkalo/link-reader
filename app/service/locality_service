const ParseUtil = require('../util/ParseUtil');

const devices = require('puppeteer/DeviceDescriptors');
const iPhone7 = devices['iPhone 7'];

const localitiesURL = 'https://afisha.tut.by/film/';

const localitySelector = '#region > ul > li > a';
const movieScheduleNameParameterSelector = 'innerText';
const movieScheduleURLParameterSelector = 'href';

const moviesScheduleURLPrefix = 'https://afisha.tut.by/film-';

function createLocality(name, alternativeName, movieScheduleURL) {
    return {
        name: name,
        alternativeName: alternativeName,
        moviesScheduleURL: movieScheduleURL
    }
}

async function parseLocality(element) {
    const moviesScheduleURL = await ParseUtil.selectElementProperty(element, movieScheduleURLParameterSelector);
    return createLocality(
        await ParseUtil.selectElementProperty(element, movieScheduleNameParameterSelector),
        parseLocalityAlternativeName(moviesScheduleURL),
        moviesScheduleURL
    )
}

function parseLocalityAlternativeName(moviesScheduleURL) {
    return moviesScheduleURL.replace(moviesScheduleURLPrefix, '').replace('/', '')
}

class LocalityService {

    constructor(browser) {
        this.browser = browser;
    }

    async getLocalities() {
        const page = await this.browser.newPage();
        await page.emulate(iPhone7);
        await page.goto(localitiesURL);
        const elements = await page.$$(localitySelector);
        const elementsPromises = elements.map(element => parseLocality(element));
        const localities = await Promise.all(elementsPromises);
        await page.close();
        return localities;
    }

}

module.exports = LocalityService;